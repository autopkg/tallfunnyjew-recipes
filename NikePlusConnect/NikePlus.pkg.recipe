<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
	<string>Downloads the current Nike+ Connect DMG, then extracts the installer package. PLEASE NOTE: because the payload pkg name is different than the App pkg name that's extracted, I'm using two inputs (found at top of recipe) and then calling them in processors further down in the recipe.</string>
	<key>Identifier</key>
	<string>com.github.tallfunnyjew.pkg.NikePlus</string>
 	<key>Input</key>
    <dict>
        <key>PAYLOADNAME</key>
        <string>Nike+Connect_new</string>
        <key>APPNAME</key>
        <string>Nike+ Connect</string>
    </dict>
	<key>MinimumVersion</key>
	<string>0.4.0</string>
	<key>ParentRecipe</key>
	<string>com.github.tallfunnyjew.download.NikePlus</string>
	<key>Process</key>
	<array>
        <dict>
            <key>Comment</key>
			<string>This processor grabs the pkg from inside the downloaded DMG, creates an "unpack" directory in the Cache folder and unpacks the pkg into that directory.</string>
            <key>Processor</key>
            <string>FlatPkgUnpacker</string>
            <key>Arguments</key>
            <dict>
                <key>flat_pkg_path</key>
                <string>%pathname%/*.pkg</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/unpack</string>
            </dict>
        </dict>
        <dict>
            <key>Comment</key>
			<string>This processor creates a "payload" directory in the Cache folder and unpacks the payload from the flatpkg into that directory. Here we call the Payload Name input variable from top of recipe.</string>
			<key>Processor</key>
            <string>PkgPayloadUnpacker</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_payload_path</key>
                <string>%RECIPE_CACHE_DIR%/unpack/%PAYLOADNAME%.pkg/Payload</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/payload</string>
            </dict>
        </dict>            
        <dict>
            <key>Comment</key>
			<string>This processor grabs the version number from the info.plist inside the App bundle. Here we call the AppName input variable from top of recipe.</string>
            <key>Processor</key>
            <string>Versioner</string>
            <key>Arguments</key>
            <dict>
                <key>input_plist_path</key>
                <string>%RECIPE_CACHE_DIR%/payload/%APPNAME%.app/Contents/Info.plist</string>
                <key>plist_version_key</key>
                <string>CFBundleGetInfoString</string>
            </dict>
        </dict>
        <dict>
            <key>Comment</key>
			<string>Normally this processor calls App Name and version. However, CFBundleGetInfoString already calls those both, so commenting out normal processor call.</string>
			<key>Processor</key>
            <string>PkgCopier</string>
            <key>Arguments</key>
            <dict>
                <key>source_pkg</key>
                <string>%pathname%/*.pkg</string>
                <key>pkg_path</key>
                <string>%RECIPE_CACHE_DIR%/%version%.pkg</string>
<!-- 
                <string>%RECIPE_CACHE_DIR%/%APPNAME%-%version%.pkg</string>
 -->
            </dict>
        </dict>
        <dict>
            <key>Comment</key>
			<string>This processor just deletes the "unpack" and "payload" directories we just created.</string>
			<key>Processor</key>
			<string>PathDeleter</string>
			<key>Arguments</key>
			<dict>
				<key>path_list</key>
				<array>
					<string>%RECIPE_CACHE_DIR%/unpack</string>
					<string>%RECIPE_CACHE_DIR%/payload</string>
				</array>
			</dict>
		</dict>    	      	
	</array>
</dict>
</plist>
